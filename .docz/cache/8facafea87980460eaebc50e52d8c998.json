{"remainingRequest":"/Users/apple/Documents/project/antd-doddle/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/apple/Documents/project/antd-doddle/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-object-rest-spread\",[\"@babel/plugin-proposal-decorators\",{\"legacy\":true}],\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-transform-classes\",[\"/Users/apple/Documents/project/antd-doddle/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/apple/Documents/project/antd-doddle/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/apple/Documents/project/antd-doddle/src/utils/index.js","dependencies":[{"path":"/Users/apple/Documents/project/antd-doddle/src/utils/index.js","mtime":1548581293509},{"path":"/Users/apple/Documents/project/antd-doddle/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Documents/project/antd-doddle/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport moment from 'moment';\nexport var DATE_FORMAT = 'YYYY-MM-DD';\nexport var DATE_TIME_FORMAT = 'YYYY-MM-DD HH:mm:ss'; // 表单通用格式\n\nexport var formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 15\n    }\n  }\n};\n/**\n * @param {*} value 判断该对象是否是空对象或空数组\n */\n\nexport var isEmpty = function isEmpty(value) {\n  return _typeof(value) === 'object' && Object.keys(value).length === 0;\n};\n/**\n * 根据指定的枚举值和枚举数组，找出其枚举对应的标签；\n * @param {*} value 枚举值\n * @param {*} enums 枚举数组\n */\n\nexport var getEnumObject = function getEnumObject(enums, value) {\n  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'value';\n  var res = enums.filter(function (item) {\n    return item[key] === value;\n  });\n  return res.length > 0 ? res[0] : {};\n};\n/**\n * 根据给定的数组,转化成标准的label, value数组；\n * @param {array} arr 目标数组\n * @param {string} value value对应属性\n * @param {string} label label对应属性\n */\n\nexport var toFormatEnums = function toFormatEnums() {\n  var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var value = arguments.length > 1 ? arguments[1] : undefined;\n  var label = arguments.length > 2 ? arguments[2] : undefined;\n  return arr.map(function (target) {\n    return {\n      label: target[label],\n      value: target[value]\n    };\n  });\n};\n/**\n * 作用：拼接区域和详细地址，处理一些特殊情况\n * @param {Object} value  { id, name, address }\n */\n\nexport var concatAddress = function concatAddress(value) {\n  var _value$id = value.id,\n      id = _value$id === void 0 ? '' : _value$id,\n      name = value.name,\n      address = value.address;\n  var temp = name ? name.split('-') : [];\n  var regionName = ''; // 如果选择中包含了全四川，全成都这种字样，则只有一项有效;\n\n  if (\"\".concat(id).length < temp.length * 2) {\n    temp.pop();\n  } // 处理天津-天津，上海-上海, 处理几个直辖市\n\n\n  if (temp.length > 1 && temp[0] === temp[1]) {\n    regionName = \"\".concat(temp[1], \"\\u5E02\");\n\n    if (temp.length > 2) {\n      regionName += temp[2];\n    }\n  } else {\n    regionName = temp.join('');\n  }\n\n  return \"\".concat(regionName).concat(address);\n};\n/**\n * 作用: 函数节流\n * @params: fun         需要节流执行的程序\n * @params: delay       延迟执行时间\n * @params: time        最小触发间隔\n * @return：返回值延迟执行的函数\n */\n\nexport var throttle = function throttle(fun) {\n  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 800;\n  var time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;\n  var timeout;\n  var startTime = new Date();\n  return function callback(_ref) {\n    var args = _extends({}, _ref);\n\n    var curTime = new Date();\n    clearTimeout(timeout);\n\n    if (curTime - startTime >= time) {\n      fun(args);\n      startTime = curTime;\n    } else {\n      timeout = setTimeout(function () {\n        fun(args);\n      }, delay);\n    }\n  };\n};\n/**\n * 功能：字符串的简单加解密\n * @param {*} code 要加密的字符串\n */\n\nexport function compileParam() {\n  var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var c = String.fromCharCode(code.charCodeAt(0) + code.length);\n\n  for (var i = 1; i < code.length; i += 1) {\n    c += String.fromCharCode(code.charCodeAt(i) + code.charCodeAt(i - 1));\n  }\n\n  return c;\n}\nexport function unCompileParam() {\n  var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var c = String.fromCharCode(code.charCodeAt(0) - code.length);\n\n  for (var i = 1; i < code.length; i += 1) {\n    c += String.fromCharCode(code.charCodeAt(i) - c.charCodeAt(i - 1));\n  }\n\n  return c;\n}\n/**\n * 校验身份证号码是否合法\n * @param String  id   合法的身份证编号\n * @param Boolean mask 身份证编号是否包含掩码\n * return Boolean 对于有掩码的身份证号码，只校验掩码格式是否正确，通用是前四位为最后四位为明码\n * 对于不包含掩码的，按国家规定格式校验。为真返回true\n */\n\nexport function idCodeValid(code, mask) {\n  var startNum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;\n  var endNum = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 4;\n\n  // 修改数据时加了掩码的, 直接返回true\n  if (mask && code.indexOf('*') === startNum && code.lastIndexOf('*') === code.length + 1 - endNum) {\n    return true;\n  }\n\n  var city = {\n    11: '北京',\n    12: '天津',\n    13: '河北',\n    14: '山西',\n    15: '内蒙古',\n    21: '辽宁',\n    22: '吉林',\n    23: '黑龙江',\n    31: '上海',\n    32: '江苏',\n    33: '浙江',\n    34: '安徽',\n    35: '福建',\n    36: '江西',\n    37: '山东',\n    41: '河南',\n    42: '湖北',\n    43: '湖南',\n    44: '广东',\n    45: '广西',\n    46: '海南',\n    50: '重庆',\n    51: '四川',\n    52: '贵州',\n    53: '云南',\n    54: '西藏',\n    61: '陕西',\n    62: '甘肃',\n    63: '青海',\n    64: '宁夏',\n    65: '新疆',\n    71: '台湾',\n    81: '香港',\n    82: '澳门',\n    91: '国外'\n  };\n  var checkBool = true;\n\n  if (!code || !/^\\d{6}(18|19|20)\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(code)) {\n    checkBool = false;\n  } else if (!city[code.substr(0, 2)]) {\n    checkBool = false;\n  } else if (moment(\"\".concat(code.substring(6, 10), \"-\").concat(code.substring(10, 12), \"-\").concat(code.substring(12, 14))) > moment()) {\n    checkBool = false;\n  } else {\n    var codeArr = code.split(''); // 加权因子\n\n    var factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]; // 校验位\n\n    var parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2];\n    var sum = 0;\n    var ai = 0;\n    var wi = 0;\n\n    for (var i = 0; i < 17; i += 1) {\n      ai = codeArr[i];\n      wi = factor[i];\n      sum += ai * wi;\n    }\n\n    if (parity[sum % 11].toString() !== codeArr[17]) {\n      checkBool = false;\n    }\n  }\n\n  return checkBool;\n}\n/**\n * 根据身份证号码获取性别\n * @param  String id 合法的身份证编号\n * @return String 合法返回0或1，0为男，1位女，不合法返回-1\n */\n\nexport function getSexById() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var sex = '-1';\n\n  if (idCodeValid(id)) {\n    if (parseInt(id.substr(16, 1), 10) % 2 === 1) {\n      // 男\n      sex = '0';\n    } else {\n      // 女\n      sex = '1';\n    }\n  }\n\n  return sex;\n}\n/**\n * 根据身份证号码获取年龄\n * @param String id 合法的身份证编号\n * return Number 合法返回对应年龄，不合法返回-1\n */\n\nexport function getAgeById() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var age = -1;\n\n  if (idCodeValid(id)) {\n    var birth = moment(\"\".concat(id.substring(6, 10), \"-\").concat(id.substring(10, 12), \"-\").concat(id.substring(12, 14)));\n    var birthYear = birth.year();\n    var birthMonth = birth.month();\n    var birthDate = birth.date();\n    var now = moment();\n    var nowYear = now.year();\n    var nowMonth = now.month();\n    var nowDate = now.date();\n    age = nowYear - birthYear;\n\n    if (birthMonth > nowMonth || birthMonth === nowMonth && birthDate > nowDate) {\n      age -= 1;\n    }\n  }\n\n  return age;\n}\n/**\n * 根据传入的数，加千分位与保留小数点后n位；\n * @param {*} value 要格式化的数据\n * @param {*} pointCount 保留小数点的位数\n */\n\nexport function toDecimalNumber() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var pointCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var withPoint = value.toFixed(pointCount);\n  var reg = /(\\d{1,3})(?=(\\d{3})+(\\.|$))/g;\n  return withPoint.replace(reg, '$1,');\n}\n/**\n * 从动态表单中提取list数据\n * @param: Object values 动态表单对象， like：{ name1: 1, value1: 1, name2: '2', value2: 2 }\n * @return：返回值是一个数组：[{name: 1, value: 2 }, { name: 2, value: 2 }]\n */\n\nexport function objectToList(values) {\n  var regExp = /-\\d$/;\n  var indexObj = {}; // 筛选当前Form的'field-num'字符串到list数组中\n\n  var list = Object.keys(values).filter(function (x) {\n    return regExp.test(x);\n  });\n  var array = list.reduce(function (arr, x) {\n    var field = x.split('-')[0]; // 列名\n\n    var i = x.split('-')[1]; // arr index，index有可能能不是连贯的\n\n    var obj = arr[i] || {};\n    indexObj[i] = i; // 记录出现过的Index\n\n    obj[field] = values[x]; // eslint-disable-next-line\n\n    arr[i] = obj;\n    return arr;\n  }, []); // 因为index可能不是连贯的，所以可能某些数组是空的\n\n  return {\n    indexObj: indexObj,\n    // 出现过的index\n    list: array.filter(function (obj) {\n      return Object.keys(obj).length;\n    })\n  };\n}\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(DATE_FORMAT, \"DATE_FORMAT\", \"/Users/apple/Documents/project/antd-doddle/src/utils/index.js\");\n  reactHotLoader.register(DATE_TIME_FORMAT, \"DATE_TIME_FORMAT\", \"/Users/apple/Documents/project/antd-doddle/src/utils/index.js\");\n  reactHotLoader.register(formItemLayout, \"formItemLayout\", \"/Users/apple/Documents/project/antd-doddle/src/utils/index.js\");\n  reactHotLoader.register(isEmpty, \"isEmpty\", \"/Users/apple/Documents/project/antd-doddle/src/utils/index.js\");\n  reactHotLoader.register(getEnumObject, \"getEnumObject\", \"/Users/apple/Documents/project/antd-doddle/src/utils/index.js\");\n  reactHotLoader.register(toFormatEnums, \"toFormatEnums\", \"/Users/apple/Documents/project/antd-doddle/src/utils/index.js\");\n  reactHotLoader.register(concatAddress, \"concatAddress\", \"/Users/apple/Documents/project/antd-doddle/src/utils/index.js\");\n  reactHotLoader.register(throttle, \"throttle\", \"/Users/apple/Documents/project/antd-doddle/src/utils/index.js\");\n  reactHotLoader.register(compileParam, \"compileParam\", \"/Users/apple/Documents/project/antd-doddle/src/utils/index.js\");\n  reactHotLoader.register(unCompileParam, \"unCompileParam\", \"/Users/apple/Documents/project/antd-doddle/src/utils/index.js\");\n  reactHotLoader.register(idCodeValid, \"idCodeValid\", \"/Users/apple/Documents/project/antd-doddle/src/utils/index.js\");\n  reactHotLoader.register(getSexById, \"getSexById\", \"/Users/apple/Documents/project/antd-doddle/src/utils/index.js\");\n  reactHotLoader.register(getAgeById, \"getAgeById\", \"/Users/apple/Documents/project/antd-doddle/src/utils/index.js\");\n  reactHotLoader.register(toDecimalNumber, \"toDecimalNumber\", \"/Users/apple/Documents/project/antd-doddle/src/utils/index.js\");\n  reactHotLoader.register(objectToList, \"objectToList\", \"/Users/apple/Documents/project/antd-doddle/src/utils/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/Users/apple/Documents/project/antd-doddle/src/utils/index.js"],"names":["moment","DATE_FORMAT","DATE_TIME_FORMAT","formItemLayout","labelCol","xs","span","sm","wrapperCol","isEmpty","value","Object","keys","length","getEnumObject","enums","key","res","filter","item","toFormatEnums","arr","label","map","target","concatAddress","id","name","address","temp","split","regionName","pop","join","throttle","fun","delay","time","timeout","startTime","Date","callback","args","curTime","clearTimeout","setTimeout","compileParam","code","c","String","fromCharCode","charCodeAt","i","unCompileParam","idCodeValid","mask","startNum","endNum","indexOf","lastIndexOf","city","checkBool","test","substr","substring","codeArr","factor","parity","sum","ai","wi","toString","getSexById","sex","parseInt","getAgeById","age","birth","birthYear","year","birthMonth","month","birthDate","date","now","nowYear","nowMonth","nowDate","toDecimalNumber","pointCount","withPoint","toFixed","reg","replace","objectToList","values","regExp","indexObj","list","x","array","reduce","field","obj"],"mappings":"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","sourcesContent":["import moment from 'moment';\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\nexport const DATE_TIME_FORMAT = 'YYYY-MM-DD HH:mm:ss';\n\n// 表单通用格式\nexport const formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 15 },\n  },\n};\n\n/**\n * @param {*} value 判断该对象是否是空对象或空数组\n */\nexport const isEmpty = value => typeof value === 'object' && Object.keys(value).length === 0;\n\n/**\n * 根据指定的枚举值和枚举数组，找出其枚举对应的标签；\n * @param {*} value 枚举值\n * @param {*} enums 枚举数组\n */\nexport const getEnumObject = (enums, value, key = 'value') => {\n  const res = enums.filter(item => item[key] === value);\n  return res.length > 0 ? res[0] : {};\n};\n\n/**\n * 根据给定的数组,转化成标准的label, value数组；\n * @param {array} arr 目标数组\n * @param {string} value value对应属性\n * @param {string} label label对应属性\n */\nexport const toFormatEnums = (arr = [], value, label) => arr.map(target => ({\n  label: target[label], value: target[value],\n}));\n\n/**\n * 作用：拼接区域和详细地址，处理一些特殊情况\n * @param {Object} value  { id, name, address }\n */\nexport const concatAddress = (value) => {\n  const { id = '', name, address } = value;\n  const temp = name ? name.split('-') : [];\n  let regionName = '';\n  // 如果选择中包含了全四川，全成都这种字样，则只有一项有效;\n  if (`${id}`.length < (temp.length * 2)) {\n    temp.pop();\n  }\n  // 处理天津-天津，上海-上海, 处理几个直辖市\n  if (temp.length > 1 && temp[0] === temp[1]) {\n    regionName = `${temp[1]}市`;\n    if (temp.length > 2) {\n      regionName += temp[2];\n    }\n  } else {\n    regionName = temp.join('');\n  }\n  return `${regionName}${address}`;\n};\n\n/**\n * 作用: 函数节流\n * @params: fun         需要节流执行的程序\n * @params: delay       延迟执行时间\n * @params: time        最小触发间隔\n * @return：返回值延迟执行的函数\n */\nexport const throttle = (fun, delay = 800, time = 300) => {\n  let timeout;\n  let startTime = new Date();\n\n  return function callback({ ...args }) {\n    const curTime = new Date();\n    clearTimeout(timeout);\n    if (curTime - startTime >= time) {\n      fun(args);\n      startTime = curTime;\n    } else {\n      timeout = setTimeout(() => { fun(args); }, delay);\n    }\n  };\n};\n\n/**\n * 功能：字符串的简单加解密\n * @param {*} code 要加密的字符串\n */\nexport function compileParam(code = '') {\n  let c = String.fromCharCode(code.charCodeAt(0) + code.length);\n  for (let i = 1; i < code.length; i += 1) {\n    c += String.fromCharCode(code.charCodeAt(i) + code.charCodeAt(i - 1));\n  }\n  return c;\n}\n\nexport function unCompileParam(code = '') {\n  let c = String.fromCharCode(code.charCodeAt(0) - code.length);\n  for (let i = 1; i < code.length; i += 1) {\n    c += String.fromCharCode(code.charCodeAt(i) - c.charCodeAt(i - 1));\n  }\n  return c;\n}\n\n\n/**\n * 校验身份证号码是否合法\n * @param String  id   合法的身份证编号\n * @param Boolean mask 身份证编号是否包含掩码\n * return Boolean 对于有掩码的身份证号码，只校验掩码格式是否正确，通用是前四位为最后四位为明码\n * 对于不包含掩码的，按国家规定格式校验。为真返回true\n */\nexport function idCodeValid(code, mask, startNum = 4, endNum = 4) {\n  // 修改数据时加了掩码的, 直接返回true\n  if (mask && code.indexOf('*') === startNum && code.lastIndexOf('*') === (code.length + 1) - endNum) {\n    return true;\n  }\n  const city = {\n    11: '北京',\n    12: '天津',\n    13: '河北',\n    14: '山西',\n    15: '内蒙古',\n    21: '辽宁',\n    22: '吉林',\n    23: '黑龙江',\n    31: '上海',\n    32: '江苏',\n    33: '浙江',\n    34: '安徽',\n    35: '福建',\n    36: '江西',\n    37: '山东',\n    41: '河南',\n    42: '湖北',\n    43: '湖南',\n    44: '广东',\n    45: '广西',\n    46: '海南',\n    50: '重庆',\n    51: '四川',\n    52: '贵州',\n    53: '云南',\n    54: '西藏',\n    61: '陕西',\n    62: '甘肃',\n    63: '青海',\n    64: '宁夏',\n    65: '新疆',\n    71: '台湾',\n    81: '香港',\n    82: '澳门',\n    91: '国外',\n  };\n  let checkBool = true;\n\n  if (!code || !/^\\d{6}(18|19|20)\\d{2}(0[1-9]|1[012])(0[1-9]|[12]\\d|3[01])\\d{3}(\\d|X)$/i.test(code)) {\n    checkBool = false;\n  } else if (!city[code.substr(0, 2)]) {\n    checkBool = false;\n  } else if (moment(`${code.substring(6, 10)}-${code.substring(10, 12)}-${code.substring(12, 14)}`) > moment()) {\n    checkBool = false;\n  } else {\n    const codeArr = code.split('');\n\n    // 加权因子\n    const factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n\n    // 校验位\n    const parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2];\n\n    let sum = 0;\n    let ai = 0;\n    let wi = 0;\n\n    for (let i = 0; i < 17; i += 1) {\n      ai = codeArr[i];\n      wi = factor[i];\n      sum += ai * wi;\n    }\n\n    if (parity[sum % 11].toString() !== codeArr[17]) {\n      checkBool = false;\n    }\n  }\n\n  return checkBool;\n}\n\n/**\n * 根据身份证号码获取性别\n * @param  String id 合法的身份证编号\n * @return String 合法返回0或1，0为男，1位女，不合法返回-1\n */\nexport function getSexById(id = '') {\n  let sex = '-1';\n\n  if (idCodeValid(id)) {\n    if (parseInt(id.substr(16, 1), 10) % 2 === 1) {\n      // 男\n      sex = '0';\n    } else {\n      // 女\n      sex = '1';\n    }\n  }\n\n  return sex;\n}\n\n/**\n * 根据身份证号码获取年龄\n * @param String id 合法的身份证编号\n * return Number 合法返回对应年龄，不合法返回-1\n */\nexport function getAgeById(id = '') {\n  let age = -1;\n\n  if (idCodeValid(id)) {\n    const birth = moment(`${id.substring(6, 10)}-${id.substring(10, 12)}-${id.substring(12, 14)}`);\n    const birthYear = birth.year();\n    const birthMonth = birth.month();\n    const birthDate = birth.date();\n    const now = moment();\n    const nowYear = now.year();\n    const nowMonth = now.month();\n    const nowDate = now.date();\n\n    age = nowYear - birthYear;\n\n    if (birthMonth > nowMonth || (birthMonth === nowMonth && birthDate > nowDate)) {\n      age -= 1;\n    }\n  }\n\n  return age;\n}\n\n/**\n * 根据传入的数，加千分位与保留小数点后n位；\n * @param {*} value 要格式化的数据\n * @param {*} pointCount 保留小数点的位数\n */\nexport function toDecimalNumber(value = 0, pointCount = 2) {\n  const withPoint = value.toFixed(pointCount);\n  const reg = /(\\d{1,3})(?=(\\d{3})+(\\.|$))/g;\n  return withPoint.replace(reg, '$1,');\n}\n\n/**\n * 从动态表单中提取list数据\n * @param: Object values 动态表单对象， like：{ name1: 1, value1: 1, name2: '2', value2: 2 }\n * @return：返回值是一个数组：[{name: 1, value: 2 }, { name: 2, value: 2 }]\n */\nexport function objectToList(values) {\n  const regExp = /-\\d$/;\n  const indexObj = {};\n  // 筛选当前Form的'field-num'字符串到list数组中\n  const list = Object.keys(values).filter(x => regExp.test(x));\n  const array = list.reduce((arr, x) => {\n    const field = x.split('-')[0]; // 列名\n    const i = x.split('-')[1]; // arr index，index有可能能不是连贯的\n    const obj = arr[i] || {};\n    indexObj[i] = i; // 记录出现过的Index\n    obj[field] = values[x];\n    // eslint-disable-next-line\n    arr[i] = obj;\n    return arr;\n  }, []);\n  // 因为index可能不是连贯的，所以可能某些数组是空的\n  return {\n    indexObj, // 出现过的index\n    list: array.filter(obj => Object.keys(obj).length),\n  };\n}\n"]}]}